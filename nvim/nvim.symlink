"General Setting------------------------------
set encoding=utf-8
set t_Co=256
set background=dark
set tabstop=4 softtabstop=4 shiftwidth=4
set expandtab
set guifont=Fira\ Code:h12
set scrolloff=10
set ai
set nowrap
set number
set ruler
set hlsearch
set cursorline
set hidden
set clipboard=unnamed
set autoread
set completeopt-=preview
set backspace=indent,eol,start

"nmap---------------------------------
map <leader>t :TagbarToggle<CR>
map <leader>f :NERDTreeToggle<CR>
nmap <C-P> :Files<CR>
nmap <C-e> :Buffers<CR>
let g:fzf_action = { 'ctrl-e': 'edit' }

"plugins------------------------------
call plug#begin('~/.config/nvim/plugged')

Plug 'VundleVim/Vundle.vim'

Plug 'preservim/nerdtree'
Plug 'preservim/tagbar'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'jiangmiao/auto-pairs'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'nvie/vim-flake8'
Plug 'ryanoasis/vim-devicons'
Plug 'morhetz/gruvbox'
Plug 'pocke/sushibar.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'dense-analysis/ale'


call plug#end()

"theme--------------------------------
syntax on
set bg=dark
let g:gruvbox_contrast_dark = 'medium'

colorscheme gruvbox

"airline------------------------------
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 0
let g:airline#extensions#whitespace#enabled = 0

" Fancy Symbols!!
let g:webdevicons_enable = 1

" custom airline symbols
if !exists('g:airline_symbols')
   let g:airline_symbols = {}
endif
let g:airline_left_sep = 'î‚°'
let g:airline_left_alt_sep = 'î‚±'
let g:airline_right_sep = 'î‚²'
let g:airline_right_alt_sep = 'î‚³'
 
let g:airline_symbols.branch = 'â­ '
let g:airline_symbols.readonly = 'ðŸ”’'
let g:airline_symbols.linenr = 'â˜° '
let g:airline_symbols.maxlinenr = ' Â¶'

"NerdTree-----------------------------
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() |
   \ quit | endif
"autocmd VimEnter * NERDTree | wincmd p
autocmd BufWinEnter * silent NERDTreeMirror
let NERDTreeIgnore = ['\.pyc$', '__pycache__']

"TagBar-------------------------------

"ncm----------------------------------

"Flake8-------------------------------
let g:flake8_show_in_file=1

"coc----------------------------------
" Use <Tab> and <S-Tab> to navigate the completion list
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

"ALE----------------------------------
" let b:ale_fixers = ['autopep8']
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'python': ['pylint', 'pyright']
\}
let g:syntastic_python_pylint_post_args="--max-line-length=79"
let g:ale_set_highlights = 1
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-J> <Plug>(ale_next_wrap)

let g:ale_fix_on_save = 1
let g:ale_python_auto_pipenv = 1
let g:ale_python_pylint_auto_pipenv = 1
let g:ale_completion_enabled = 0
set omnifunc=
let g:omni_sql_no_default_maps = 1
