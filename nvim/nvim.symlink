"General Setting------------------------------
set encoding=utf-8
set t_Co=256
set background=dark
set tabstop=4 softtabstop=4 shiftwidth=4
autocmd FileType typescript,javascript,typescriptreact,javascriptreact setlocal shiftwidth=4 tabstop=4 expandtab
set expandtab
set guifont=Fira\ Code:h12
set scrolloff=10
set ai
set nowrap
set number
set ruler
set hlsearch
set cursorline
set hidden
set clipboard=unnamed
set autoread
set completeopt-=preview
set backspace=indent,eol,start
let &t_SI = "\e[5 q"
let &t_EI = "\e[2 q"
nnoremap d "_d
vnoremap d "_d

"nmap---------------------------------
map <leader>t :TagbarToggle<CR>
map <leader>f :silent! NERDTreeToggle<CR>
nmap <C-P> :Files<CR>
nmap <C-e> :Buffers<CR>
let g:fzf_action = { 'ctrl-e': 'edit' }
nnoremap <silent> <Leader>p :Rg<CR>

"plugins------------------------------
call plug#begin('~/.config/nvim/plugged')

Plug 'preservim/nerdtree'
Plug 'preservim/tagbar'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'jiangmiao/auto-pairs'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'nvie/vim-flake8'
Plug 'ryanoasis/vim-devicons'
Plug 'morhetz/gruvbox'
Plug 'pocke/sushibar.vim'
" Plug 'dense-analysis/ale'
Plug 'APZelos/blamer.nvim'
Plug 'MattesGroeger/vim-bookmarks'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'chrisbra/csv.vim'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'yuezk/vim-js'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'prettier/vim-prettier', { 'do': 'pnpm install -g' }
Plug 'github/copilot.vim'
Plug 'voldikss/vim-floaterm'
Plug 'iberianpig/tig-explorer.vim'
Plug 'rbgrouleff/bclose.vim'
Plug 'brooth/far.vim'

call plug#end()

"theme--------------------------------
filetype plugin on
syntax enable
set bg=dark
let g:gruvbox_contrast_dark = 'medium'

colorscheme gruvbox

"airline------------------------------
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 0
let g:airline#extensions#whitespace#enabled = 0

" Fancy Symbols!!
let g:webdevicons_enable = 1

" custom airline symbols
if !exists('g:airline_symbols')
   let g:airline_symbols = {}
endif
let g:airline_left_sep = 'î‚°'
let g:airline_left_alt_sep = 'î‚±'
let g:airline_right_sep = 'î‚²'
let g:airline_right_alt_sep = 'î‚³'
 
let g:airline_symbols.branch = 'â­ '
let g:airline_symbols.readonly = 'ðŸ”’'
let g:airline_symbols.linenr = 'â˜° '
let g:airline_symbols.maxlinenr = ' Â¶'

"NerdTree-----------------------------
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() |
   \ quit | endif
"autocmd VimEnter * NERDTree | wincmd p
autocmd BufWinEnter * silent NERDTreeMirror
let NERDTreeIgnore = ['\.pyc$', '__pycache__']
let NERDTreeShowHidden=1
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:WebDevIconsUnicodeDecorateFileNodes = 1
let g:DevIconsEnableFolderExtensionPatternMatching = 1
let g:WebDevIconsNerdTreePlugin = 1
let g:NERDTreeHighlightFolders = 1
let g:NERDTreeShowLineNumbers = 1
let g:NERDTreeQuitOnOpen = 0

"TagBar-------------------------------
nmap <Bslash><T> :TagbarToggle<CR>
let g:tagbar_ctags_bin = '/opt/homebrew/bin/ctags'
let g:tagbar_mem_limit = 134217728

"fzf----------------------------------
let g:fzf_default_command = 'Hidden Files'

"Flake8-------------------------------
let g:flake8_show_in_file=1

"coc----------------------------------
" Use <Tab> and <S-Tab> to navigate the completion list
inoremap <expr> <Tab> coc#pum#visible() ? coc#pum#next(1) : '<Tab>'
inoremap <expr> <S-Tab> coc#pum#visible() ? coc#pum#prev(1) : '<S-Tab>'

"ALE----------------------------------
" let b:ale_fixers = ['autopep8']
" let g:ale_linters = {
" \   'python': ['pylint', 'pyright']
" \}
" " \   'javascript': ['eslint'],
" let g:syntastic_python_pylint_post_args="--max-line-length=79"
" let g:ale_set_highlights = 1
" let g:ale_sign_error = 'âœ•'
" let g:ale_sign_warning = 'âš ï¸Ž'
" nmap <silent> <C-k> <Plug>(ale_previous_wrap)
" nmap <silent> <C-J> <Plug>(ale_next_wrap)
" 
" let g:ale_fix_on_save = 1
" let g:ale_python_auto_pipenv = 1
" let g:ale_python_pylint_auto_pipenv = 1
" let g:ale_completion_enabled = 0
" set omnifunc=
" let g:omni_sql_no_default_maps = 1

"vim-bookmark-------------------------
highlight BookmarkSign ctermbg=237 ctermfg=130
let g:bookmark_save_per_working_dir = 1
let g:bookmark_auto_save = 1

"csv.vim------------------------------
let g:csv_highlight_column = 'y'
let g:csv_arrange_align='l*'
hi CSVColumnEven ctermfg=Brown
hi CSVColumnOdd ctermfg=178
hi CSVColumnHeaderEven cterm=bold ctermfg=Brown
hi CSVColumnHeaderOdd cterm=bold ctermfg=178

"jsx_pretty
let g:vim_jsx_pretty_colorful_config = 1

"prettier
let g:prettier#autoformat_require_pragma = 0
let g:prettier#exec_cmd_async = 1
let g:prettier#config#prettier_exec_cmd = '!prettier'
let g:prettier#config#prettier_config_file = '.prettierrc.yaml'
let g:prettier#autoformat = 0

"copilot

"vim-floaterm
" nnoremap <C-]> :FloatermNew --autoclose=2000 ctags -R .<CR>
" autocmd FileType floaterm nnoremap <buffer> <silent> <CR> :FloatermSend ctags<CR>
"

"gitlens-----------------------------
let g:blamer_enabled = 1
let g:blamer_show_in_visual_modes = 0
let g:blamer_show_in_insert_modes = 0

let g:tig_explorer_keymap_commit_split = '<C-s>'
